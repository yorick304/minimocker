webpackJsonp([1,0],[function(t,e,o){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}var a=o(1),n=s(a),l=o(18),c=s(l),i=o(13),d=s(i),r=o(16),u=s(r);c.default.use(u.default),c.default.filter("formatJSONStr",function(t){try{var e=(0,n.default)(JSON.parse(t),void 0,4);return e}catch(e){return t}}),c.default.filter("formatMockList",function(t){var e=[],o=[];return t.forEach(function(t){t.enabled?e.push(t):o.push(t)}),e.concat(o)}),new c.default({el:"body",components:{App:d.default}})},,function(t,e,o){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var a=o(1),n=s(a),l=o(15),c=s(l),i=o(14),d=s(i),r=o(17);e.default={components:{title:c.default,panel:d.default,modal:r.modal,alert:r.alert},data:function(){return{mockData:[],newMockModal:!1,editMockModal:!1,showTop:!1,showTopSuccess:!1,newMock:{urlReg:"",enabled:!1,jsonp:!1,statusCode:"200",jsonpReg:"",headers:{},headersStr:'{"Content-Type":"text/html"}',body:""},editMock:{urlReg:"",enabled:!1,jsonp:!1,statusCode:"200",jsonpReg:"",headers:{},headersStr:"",body:""},alerts:{noUrlReg:"urlReg不能为空！",notValidUrlReg:"urlReg无效！",notValidJsonpReg:"jsonpReg无效！",notValidheaders:"headers格式错误，非有效json",noStatusCode:"statusCode不能为空！",notValidStatusCode:"statusCode无效，应为3位数字！",noBody:"body不能为空！",newMockData:"成功添加新Mock项！",editMockData:"成功编辑Mock项！",delMockData:"成功删除！",enableMockData:"成功启用！",disableMockData:"成功停用！"},alertInfo:""}},ready:function(){var t=this;this.$http.get("/mockData").then(function(e){t.mockData=e.json(),console.log(e.json())},function(t){console.log(t)})},methods:{addNewMockData:function(){var t=this;this.newMock.urlReg=this.newMock.urlReg.trim(),this.newMock.statusCode=this.newMock.statusCode.trim(),this.newMock.headersStr=this.newMock.headersStr.trim(),this.newMock.body=this.newMock.body.trim(),this.validateInfo(this.newMock)&&(this.newMock.enabled=!0,this.newMock.headersStr||(this.newMock.headers={"Content-Type":"text/html"}),console.log(this.newMock.headers),this.$http.post("/addMockData",this.newMock).then(function(e){var o=e.json();1==o.result&&(console.log("成功添加！"),t.newMockModal=!1,t.alertInfo=t.alerts.newMockData,t.showTopSuccess=!0,t.mockData=o.mockData)},function(t){console.log(t)}))},deleteMockData:function(t){var e=this;this.$http.post("/delMockData",{urlReg:t}).then(function(t){var o=t.json();1==o.result&&(console.log("成功删除！"),e.alertInfo=e.alerts.delMockData,e.showTopSuccess=!0,e.mockData=o.mockData)},function(t){console.log(t)})},toggleEnabled:function(t,e){var o=this;e?this.$http.post("/disableMockData",{urlReg:t}).then(function(t){var e=t.json();console.log(e),1==e.result&&(console.log("成功停用！"),o.alertInfo=o.alerts.disableMockData,o.showTopSuccess=!0,o.mockData=e.mockData)},function(t){console.log(t)}):this.$http.post("/enableMockData",{urlReg:t}).then(function(t){var e=t.json();1==e.result&&(console.log("成功启用！"),o.alertInfo=o.alerts.enableMockData,o.showTopSuccess=!0,o.mockData=e.mockData)},function(t){console.log(t)})},showEditMockModal:function(t){this.editMock=t,console.log(this.editMock.headers),this.editMock.headers&&(this.editMock.headersStr=(0,n.default)(this.editMock.headers,4)),this.editMockModal=!0},editMockData:function(){var t=this;this.editMock.urlReg=this.editMock.urlReg.trim(),this.editMock.statusCode=this.editMock.statusCode.trim(),this.editMock.headersStr=this.editMock.headersStr.trim(),this.editMock.body=this.editMock.body.trim(),this.validateInfo(this.editMock)&&(this.editMock.headersStr||(this.editMock.headers={"Content-Type":"text/html"}),this.$http.post("/editMockData",this.editMock).then(function(e){var o=e.json();1==o.result&&(console.log("成功编辑！"),t.editMockModal=!1,t.alertInfo=t.alerts.editMockData,t.showTopSuccess=!0,t.mockData=o.mockData)},function(t){console.log(t)}))},validateInfo:function(t){if(!t.urlReg)return this.alertInfo=this.alerts.noUrlReg,this.showTop=!0,!1;try{new RegExp(t.urlReg,"i")}catch(t){return this.alertInfo=this.alerts.notValidUrlReg+t,this.showTop=!0,!1}if(!t.statusCode)return this.alertInfo=this.alerts.noStatusCode,this.showTop=!0,!1;if(t.statusCode.search(/^\d{3}$/)==-1)return this.alertInfo=this.alerts.notValidStatusCode,this.showTop=!0,!1;if(t.headersStr)try{t.headers=JSON.parse(t.headersStr)}catch(t){return this.alertInfo=this.alerts.notValidheaders+t,this.showTop=!0,!1}return!!t.body||(this.alertInfo=this.alerts.noBody,this.showTop=!0,!1)}}}},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={props:{isOpen:{type:Boolean,default:!1},header:{type:String},status:{type:Boolean}},methods:{toggleIsOpen:function(){this.isOpen=!this.isOpen}},transitions:{collapse:{afterEnter:function(t){t.style.maxHeight=""},beforeLeave:function(t){return t.style.maxHeight=t.offsetHeight+"px",t.offsetHeight}}}}},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function(){return{title:"Minimocker",subtitle:"为本地开发提供mock数据"}}}},,,function(t,e){},function(t,e){},function(t,e){},function(t,e){t.exports=' <div id=app> <title></title> <div class=container> <div class=ctrl> <button type=button class="btn btn-default" @click="newMockModal=true"> + 新增mock项 </button> <modal :show.sync=newMockModal cancel-text=取消 ok-text=确定 title=新增mock项 :callback=addNewMockData :large=true> <div slot=modal-body class=modal-body> <div class=row> <label>匹配URL：</label><input type=text name=urlReg v-model=newMock.urlReg> </div> <div class=row> <div class=group> <label>Status Code：</label><input type=text name=urlReg v-model=newMock.statusCode> </div> <div class="group jsonp-group"> <input type=checkbox name=jsonp v-model=newMock.jsonp><span>JSONP</span> </div> </div> <div class=row> <label>Headers：</label> <textarea name=headers v-model=newMock.headersStr></textarea> </div> <div class=row> <label>Body: </label> <textarea name=body v-model=newMock.body></textarea> </div> </div> </modal> </div> <panel v-for="mock in mockData | formatMockList" :header=mock.urlReg :status=mock.enabled> <div class=row> <div class=group> <span class=mock-label>匹配URL：</span><div class=mock-content>{{ mock.urlReg }}</div> </div> <div class=group> <span class=mock-label>当前状态：</span><div class=mock-content>{{ mock.enabled?\'启用中\':\'停用\' }}</div> </div> </div> <div class=row> <div class=group> <span class=mock-label>Status Code：</span><div class=mock-content>{{ mock.statusCode }}</div> </div> <div class=group> <span class=mock-label>JSONP：</span><div class=mock-content>{{ mock.jsonp }}</div> </div> </div> <div class=row> <span class=mock-label>Headers：</span> <div class=mock-content> <ul> <li v-for="header in mock.headers">{{ $key }}: {{ header }}</li> </ul> </div> </div> <div class=row> <span class=mock-label>body</span> <div class=mock-content> <pre>{{ mock.body | formatJSONStr }}</pre> </div> </div> <div class=btn-row> <button type=button class="btn btn-primary" @click=showEditMockModal(mock)>编辑</button> <button type=button class=btn :class="{\'btn-success\': !mock.enabled, \'btn-warning\': mock.enabled}" @click="toggleEnabled(mock.urlReg, mock.enabled)">{{ mock.enabled?"停用":"启用" }}</button> <button type=button class="btn btn-danger" @click=deleteMockData(mock.urlReg)>删除</button> </div> </panel> </div> <alert :show.sync=showTop :duration=1500 type=danger width=400px placement=top dismissable> <span class="icon-info-circled alert-icon-float-left"></span> <strong>{{ alertInfo }}</strong> </alert> <alert :show.sync=showTopSuccess :duration=1500 type=success width=400px placement=top dismissable> <span class="icon-info-circled alert-icon-float-left"></span> <strong>{{ alertInfo }}</strong> </alert> <modal :show.sync=editMockModal cancel-text=取消 ok-text=确定 title=编辑mock项 :callback=editMockData :large=true> <div slot=modal-body class=modal-body> <div class=row> <label>匹配URL：</label><span>{{ editMock.urlReg }}</span> </div> <div class=row> <div class=group> <label>Status Code：</label><input type=text name=urlReg v-model=editMock.statusCode> </div> <div class="group jsonp-group"> <input type=checkbox name=jsonp v-model=editMock.jsonp><span>JSONP</span> </div> </div> <div class=row> <label>Headers：</label> <textarea name=headers v-model=editMock.headersStr></textarea> </div> <div class=row> <label>Body: </label> <textarea name=body v-model=editMock.body></textarea> </div> <alert :show.sync=showTop :duration=1500 type=danger width=400px placement=top dismissable> <span class="icon-info-circled alert-icon-float-left"></span> <strong>{{ alertInfo }}</strong> </alert> </div> </modal> </div> '},function(t,e){t.exports=" <header> <p> {{ title }} <span> {{ subtitle }} </span> </p> </header> "},function(t,e){t.exports=' <div class=panel _v-59d0550a=""> <div class=panel-heading _v-59d0550a=""> <h4 class=panel-title _v-59d0550a=""> <a class=accordion-toggle :class="{\'gray\': !status}" @click=toggleIsOpen() _v-59d0550a=""> {{ header }} </a> <span :class="{\'hide\': !status}" _v-59d0550a=""> {{ status?\'启用中\':\'\' }} </span> </h4> </div> <div class=panel-collapse v-el:panel="" v-show=isOpen transition=collapse _v-59d0550a=""> <div class=panel-body _v-59d0550a=""> <slot _v-59d0550a=""></slot> </div> </div> </div> '},function(t,e,o){var s,a,n={};o(7),s=o(2),a=o(10),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports.default);var l="function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports;a&&(l.template=a),l.computed||(l.computed={}),Object.keys(n).forEach(function(t){var e=n[t];l.computed[t]=function(){return e}})},function(t,e,o){var s,a,n={};o(9),s=o(3),a=o(12),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports.default);var l="function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports;a&&(l.template=a),l.computed||(l.computed={}),Object.keys(n).forEach(function(t){var e=n[t];l.computed[t]=function(){return e}})},function(t,e,o){var s,a,n={};o(8),s=o(4),a=o(11),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports.default);var l="function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports;a&&(l.template=a),l.computed||(l.computed={}),Object.keys(n).forEach(function(t){var e=n[t];l.computed[t]=function(){return e}})}]);
//# sourceMappingURL=app.5c5caa475dc3709ad6ba.js.map